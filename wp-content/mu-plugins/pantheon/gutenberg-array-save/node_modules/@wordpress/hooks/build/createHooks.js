'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _create = require('babel-runtime/core-js/object/create');

var _create2 = _interopRequireDefault(_create);

var _createAddHook = require('./createAddHook');

var _createAddHook2 = _interopRequireDefault(_createAddHook);

var _createRemoveHook = require('./createRemoveHook');

var _createRemoveHook2 = _interopRequireDefault(_createRemoveHook);

var _createHasHook = require('./createHasHook');

var _createHasHook2 = _interopRequireDefault(_createHasHook);

var _createRunHook = require('./createRunHook');

var _createRunHook2 = _interopRequireDefault(_createRunHook);

var _createCurrentHook = require('./createCurrentHook');

var _createCurrentHook2 = _interopRequireDefault(_createCurrentHook);

var _createDoingHook = require('./createDoingHook');

var _createDoingHook2 = _interopRequireDefault(_createDoingHook);

var _createDidHook = require('./createDidHook');

var _createDidHook2 = _interopRequireDefault(_createDidHook);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Returns an instance of the hooks object.
 *
 * @return {Object} Object that contains all hooks.
 */
function createHooks() {
	var actions = (0, _create2.default)(null);
	var filters = (0, _create2.default)(null);
	actions.__current = [];
	filters.__current = [];

	return {
		addAction: (0, _createAddHook2.default)(actions),
		addFilter: (0, _createAddHook2.default)(filters),
		removeAction: (0, _createRemoveHook2.default)(actions),
		removeFilter: (0, _createRemoveHook2.default)(filters),
		hasAction: (0, _createHasHook2.default)(actions),
		hasFilter: (0, _createHasHook2.default)(filters),
		removeAllActions: (0, _createRemoveHook2.default)(actions, true),
		removeAllFilters: (0, _createRemoveHook2.default)(filters, true),
		doAction: (0, _createRunHook2.default)(actions),
		applyFilters: (0, _createRunHook2.default)(filters, true),
		currentAction: (0, _createCurrentHook2.default)(actions),
		currentFilter: (0, _createCurrentHook2.default)(filters),
		doingAction: (0, _createDoingHook2.default)(actions),
		doingFilter: (0, _createDoingHook2.default)(filters),
		didAction: (0, _createDidHook2.default)(actions),
		didFilter: (0, _createDidHook2.default)(filters),
		actions: actions,
		filters: filters
	};
}

exports.default = createHooks;